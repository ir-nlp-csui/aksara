stages:
  - linting
  - test
  - sonarqube

linting:
  image: registry.gitlab.com/mafda/python-linting
  stage: linting
  before_script:
    - pip install pylint
  script:
    - pylint src
    - pylint tests
  allow_failure: true

UnitTest:
  image: python:3.10
  stage: test
  before_script:
    - wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
    - echo "deb http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google.list
    - apt-get update
    - apt-get install -y foma-bin
    - pip install -r requirements.txt

  when: on_success
  script:
    - export PYTHONPATH="src"
    - coverage run -m unittest discover
    - coverage report
    - coverage xml
  coverage: '/TOTAL.*\s+(\d+\%)/'
  artifacts:
    paths: 
      - coverage.xml
    expire_in: 1 day

sonarqube-check:
  stage: sonarqube
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner 
      -"Dsonar.host.url=$SONAR_HOST_URL" 
      -"Dsonar.login=$SONAR_TOKEN" 
      -"Dsonar.projectKey=$SONAR_PROJECT_KEY" 
      -"Dsonar.qualitygate.wait=true" 
      -"Dsonar.python.coverage.reportPaths=coverage.xml"
      -"Dsonar.sources=src/"
      -"Dsonar.tests=tests/"
  allow_failure: true